#!/usr/bin/env python3

#
# Copyright (C) 2018 ETH Zurich and University of Bologna
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Authors: Germain Haugou, ETH (germain.haugou@iis.ee.ethz.ch)
 
import json
import argparse
from comp_gen import *

parser = argparse.ArgumentParser(
  description='Generate configuration for Pulp soc',
  formatter_class=argparse.RawDescriptionHelpFormatter
)

args = parser.parse_args()

soc = Component()

soc.axi_ico = Component()
soc_ico = Component()
soc.soc_ico = soc_ico
soc.apb_ico = Component()
soc.fc = Component()
soc.l2_priv0 = Component()
soc.l2_priv1 = Component()
soc.l2_shared_0 = Component()
soc.l2_shared_1 = Component()
soc.l2_shared_2 = Component()
soc.l2_shared_3 = Component()
soc.plt_loader = Component(
    includes=["../../tools/plt_loader/plt_loader.json"]
)
soc.fc_itc = Component()
soc.fll0 = Component()
soc.fll1 = Component()
soc.fll2 = Component()
soc.fll_ctrl = Component()
soc.apb_soc_ctrl = Component()
soc.stdout = Component()
soc.timer = Component()
soc.soc_eu = Component()
soc.udma = Component()
soc.cluster = Component(
    includes=["../../ips/cluster_v5_fpu.json"]
)

soc.adv_dbg_unit = Component(
    includes=["../../ips/adv_dbg_unit/adv_dbg_unit.json"]
)

# APB to peripherals bindings
soc.apb_ico.stdout = soc.stdout.input
soc.apb_ico.fll0 = soc.fll0.input
soc.apb_ico.fll1 = soc.fll1.input
soc.apb_ico.fll2 = soc.fll2.input
soc.apb_ico.udma = soc.udma.input
soc.apb_ico.soc_eu = soc.soc_eu.input
soc.apb_ico.apb_soc_ctrl = soc.apb_soc_ctrl.input
soc.apb_ico.fc_itc = soc.fc_itc.input
soc.apb_ico.fc_timer = soc.timer.input
soc.apb_ico.fc_dbg_unit = soc.fc.dbg_unit

# Soc interco
soc.soc_ico.apb = soc.apb_ico.input
soc.soc_ico.l2_shared_0 = soc.l2_shared_0.input
soc.soc_ico.l2_shared_1 = soc.l2_shared_1.input
soc.soc_ico.l2_shared_2 = soc.l2_shared_2.input
soc.soc_ico.l2_shared_3 = soc.l2_shared_3.input
soc.soc_ico.l2_priv_0 = soc.l2_priv0.input
soc.soc_ico.l2_priv_1 = soc.l2_priv1.input
soc.soc_ico.axi_master = soc.axi_ico.input

# FC
soc.fc.fetch = soc.soc_ico.fc_fetch
soc.fc.data = soc.soc_ico.fc_data

# AXI
soc.axi_ico.cluster = soc.cluster.input
soc.axi_ico.soc = soc.soc_ico.input

# Cluster
soc.cluster.dma_irq = soc.fc_itc.in_event_8

# Timer
soc.timer.irq_itf_0 = soc.fc_itc.in_event_10
soc.timer.irq_itf_1 = soc.fc_itc.in_event_11

# UDMA
soc.udma.l2_itf = soc.soc_ico.udma_tx
soc.udma.event_itf = soc.soc_eu.event_in

# Soc EU
soc.soc_eu.fc_event_itf = soc.fc_itc.soc_event

# Adv Dbg Unit
soc.adv_dbg_unit.io = soc.soc_ico.debug




config = soc.get_json_config()

print (config)
